# License: MIT
# Copyright Â© 2022 Frequenz Energy-as-a-Service GmbH

"""
Handling of timeseries streams.

A timeseries is a stream (normally an async iterator) of
[`Sample`][frequenz.sdk.timeseries.Sample]s.

Timeseries can be consumed from
[`Source`][frequenz.sdk.timeseries.Source]s and new timeseries can be
generated by sending samples to
a [`Sink`][frequenz.sdk.timeseries.Sink]

In general timeseries `Source`s don't necessarily come at periodic
intervals. To normalize timeseries to produce `Sample`s at regular
periodic intervals,
a [`Resampler`][frequenz.sdk.timeseries.resampling.Resampler] can be used.

A `Resampler` uses
a [`ResamplingFunction`][frequenz.sdk.timeseries.resampling.ResamplingFunction]
to produce a new sample from samples received in the past. If there are no
samples coming to a resampled timeseries for a while, eventually the
`Resampler` will produce `Sample`s with `None` as value, meaning there is no
way to produce meaningful samples with the available data.
"""

from ._base_types import Sample, Sink, Source

__all__ = [
    "Sample",
    "Sink",
    "Source",
]
